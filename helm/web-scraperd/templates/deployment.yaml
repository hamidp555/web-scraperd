apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "web-scraperd.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "web-scraperd.name" . }}
    helm.sh/chart: {{ include "web-scraperd.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
   matchLabels:
    app.kubernetes.io/name: {{ template "web-scraperd.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "web-scraperd.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Chart.Name }}  
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /daemonstatus.json
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /daemonstatus.json
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }} 
        - name: "{{ .Chart.Name }}-sync"
          image: "{{ .Values.sync.image.repository }}:{{ .Values.sync.image.tag }}"
          imagePullPolicy: {{ .Values.sync.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: "web-scraperd-sync-configmap"
          env:
            - name: REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: redis-username
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: redis-password
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - ps aux | grep app/worker.py
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - ps aux | grep app/worker.py
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.sync.resources | nindent 12 }} 
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}